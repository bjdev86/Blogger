# TODO: Create a new user (and thus a different key) for saving built code and restarting apps.

# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# Main workflow for this API Project
name: Blogglet Production Pipeline

# Start this workflow on a dispatch event (manual).
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        logLevel:
          description: 'Log level'
          required: true
          default: 'info'
          type: choice
          options:
          - info
          - warning
          - debug

# The jobs of this work flow will be to test, build and deploy this app to
# it's designated server.
jobs:

  # Preform the Jest tests setup for this API to make sure they are all still
  # passing
  #test:
  #  runs-on: ubuntu-latest

    # As part of the run strategy pick the node.js version
    #strategy:
      #matrix:
        #node-version: [15.x, 16.x, 17.x, 18.x]

    # Main steps preformed for this test job
    # steps:
    #   # Check out the repo for use
    #   - uses: actions/checkout@v3
    #   - name: Running tests using Node.js 18.x

    #     # Use NodeJS
    #     uses: actions/setup-node@v3
    #     with:
    #       # Specificy the node.js version
    #       node-version: '18.x'

    #   # Install node modules
    #   - name: Install NPM dependencies
    #     run: npm ci

    #   # Commands to run tests
    #   - run: npm install -g @angular/cli
    #   - run: ng test

  # Deploying and building will happen in one step since the build process produces needs to happen
  # on the web server.
  deploybuild:

    # Tests mus be preformed and passed before deployment.
    #needs: test

    runs-on: ubuntu-latest

    # As part of the run strategy pick the node.js version
    #strategy:
      #matrix:
        #node-version: [14.x, 16.x, 18.x]

    # Main steps preformed for this test job
    steps:
      # Check out the repo for use
      - uses: actions/checkout@v3
      - name: Building app using Node.js 18.x

        # Use NodeJS
        uses: actions/setup-node@v3
        with:
          # Specificy the node.js version
          node-version: '18.x'

      # Install Angular CLI
      - name: Install Angular CLI
        run: npm install -g @angular/cli

      # Install all app dependencies
      - name: Install App Dependencies
        run: npm ci

      # Build App
      - name: Build App
        run: ng build

      # Setup SSH keys to be added from Git Hub secretes to default files on
      # runner OS. Use default files to preform rsync command to move fresly
      # built website to webserver
      - name: Setup SSH Keys and Known_hosts
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.DIGI_O_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      # Deploy App code base to Digital Ocean server
      - name: Deploy to Digital Ocean webserver
        run: rsync -ravih --progress dist/bloglet/ bmiller@137.184.190.165:/var/www/benjmiller.dev/apps/test/blogger-ang
        
      # Restart the Blogger API PM2 process
      - name: Reload Nginx
        run: ssh bmiller@137.184.190.165 'nginx -s reload'
